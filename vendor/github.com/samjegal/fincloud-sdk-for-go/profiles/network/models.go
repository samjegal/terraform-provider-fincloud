// +build go1.9

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/samjegal/fincloud-sdk-for-go/tools/profileBuilder

package network

import original "github.com/samjegal/fincloud-sdk-for-go/services/network"

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type ACLRuleProtocolTypeCode = original.ACLRuleProtocolTypeCode

const (
	ICMP ACLRuleProtocolTypeCode = original.ICMP
	TCP  ACLRuleProtocolTypeCode = original.TCP
	UDP  ACLRuleProtocolTypeCode = original.UDP
)

type NatGatewayStatusCode = original.NatGatewayStatusCode

const (
	INIT     NatGatewayStatusCode = original.INIT
	RUN      NatGatewayStatusCode = original.RUN
	TERMTING NatGatewayStatusCode = original.TERMTING
)

type RouteTableStatusCode = original.RouteTableStatusCode

const (
	RouteTableStatusCodeRUN RouteTableStatusCode = original.RouteTableStatusCodeRUN
	RouteTableStatusCodeSET RouteTableStatusCode = original.RouteTableStatusCodeSET
)

type RouteTableStatusName = original.RouteTableStatusName

const (
	RouteTableStatusName설정중 RouteTableStatusName = original.RouteTableStatusName설정중
	RouteTableStatusName운영중 RouteTableStatusName = original.RouteTableStatusName운영중
)

type SubnetStatusCode = original.SubnetStatusCode

const (
	SubnetStatusCodeCREATING SubnetStatusCode = original.SubnetStatusCodeCREATING
	SubnetStatusCodeRUN      SubnetStatusCode = original.SubnetStatusCodeRUN
	SubnetStatusCodeTERMTING SubnetStatusCode = original.SubnetStatusCodeTERMTING
)

type VirtualPrivateCloudStatusCode = original.VirtualPrivateCloudStatusCode

const (
	VirtualPrivateCloudStatusCodeCREATING VirtualPrivateCloudStatusCode = original.VirtualPrivateCloudStatusCodeCREATING
	VirtualPrivateCloudStatusCodeINIT     VirtualPrivateCloudStatusCode = original.VirtualPrivateCloudStatusCodeINIT
	VirtualPrivateCloudStatusCodeRUN      VirtualPrivateCloudStatusCode = original.VirtualPrivateCloudStatusCodeRUN
	VirtualPrivateCloudStatusCodeTERMTING VirtualPrivateCloudStatusCode = original.VirtualPrivateCloudStatusCodeTERMTING
)

type VirtualPrivateCloudStatusName = original.VirtualPrivateCloudStatusName

const (
	VirtualPrivateCloudStatusName삭제중 VirtualPrivateCloudStatusName = original.VirtualPrivateCloudStatusName삭제중
	VirtualPrivateCloudStatusName생성중 VirtualPrivateCloudStatusName = original.VirtualPrivateCloudStatusName생성중
	VirtualPrivateCloudStatusName운영중 VirtualPrivateCloudStatusName = original.VirtualPrivateCloudStatusName운영중
	VirtualPrivateCloudStatusName준비중 VirtualPrivateCloudStatusName = original.VirtualPrivateCloudStatusName준비중
)

type ACLClient = original.ACLClient
type ACLDetailParameter = original.ACLDetailParameter
type ACLRequestParameter = original.ACLRequestParameter
type ACLResponseParameter = original.ACLResponseParameter
type ACLRuleContentParameter = original.ACLRuleContentParameter
type ACLRuleContentProperties = original.ACLRuleContentProperties
type ACLRuleDetailProperties = original.ACLRuleDetailProperties
type ACLRuleListParameter = original.ACLRuleListParameter
type ACLRuleListProperties = original.ACLRuleListProperties
type ACLRuleProperties = original.ACLRuleProperties
type BaseClient = original.BaseClient
type ErrorMessage = original.ErrorMessage
type ErrorMessageParameter = original.ErrorMessageParameter
type InboundRuleClient = original.InboundRuleClient
type NatGatewayClient = original.NatGatewayClient
type NatGatewayParameter = original.NatGatewayParameter
type NatGatewaySearchContentParameter = original.NatGatewaySearchContentParameter
type NatGatewaySearchFilterParameter = original.NatGatewaySearchFilterParameter
type NatGatewaySearchListParameter = original.NatGatewaySearchListParameter
type NatGatewaySearchParameter = original.NatGatewaySearchParameter
type NatGatewayStatusName = original.NatGatewayStatusName
type OutboundRuleClient = original.OutboundRuleClient
type RouteTableClient = original.RouteTableClient
type RouteTableDescriptionClient = original.RouteTableDescriptionClient
type RouteTableDescriptionParameter = original.RouteTableDescriptionParameter
type RouteTableEndpointTypesContentParameter = original.RouteTableEndpointTypesContentParameter
type RouteTableEndpointTypesParameter = original.RouteTableEndpointTypesParameter
type RouteTableEndpointsContentParameter = original.RouteTableEndpointsContentParameter
type RouteTableEndpointsParameter = original.RouteTableEndpointsParameter
type RouteTableIsSettedContentParameter = original.RouteTableIsSettedContentParameter
type RouteTableIsSettedParameter = original.RouteTableIsSettedParameter
type RouteTableParameter = original.RouteTableParameter
type RouteTableRuleContentParameter = original.RouteTableRuleContentParameter
type RouteTableRuleParameter = original.RouteTableRuleParameter
type RouteTableRuleSearchContentParameter = original.RouteTableRuleSearchContentParameter
type RouteTableRuleSearchParameter = original.RouteTableRuleSearchParameter
type RouteTableSearchContentParameter = original.RouteTableSearchContentParameter
type RouteTableSearchFilterParameter = original.RouteTableSearchFilterParameter
type RouteTableSearchListParameter = original.RouteTableSearchListParameter
type RouteTableSearchParameter = original.RouteTableSearchParameter
type RouteTableSubnetClient = original.RouteTableSubnetClient
type RouteTableSubnetListContentParameter = original.RouteTableSubnetListContentParameter
type RouteTableSubnetListParameter = original.RouteTableSubnetListParameter
type RouteTableSubnetParameter = original.RouteTableSubnetParameter
type RuleClient = original.RuleClient
type SubnetClient = original.SubnetClient
type SubnetParameter = original.SubnetParameter
type SubnetSearchContentParameter = original.SubnetSearchContentParameter
type SubnetSearchFilterParameter = original.SubnetSearchFilterParameter
type SubnetSearchListParameter = original.SubnetSearchListParameter
type SubnetSearchParameter = original.SubnetSearchParameter
type VirtualPrivateCloudClient = original.VirtualPrivateCloudClient
type VirtualPrivateCloudContentParameter = original.VirtualPrivateCloudContentParameter
type VirtualPrivateCloudListParameter = original.VirtualPrivateCloudListParameter
type VirtualPrivateCloudParameter = original.VirtualPrivateCloudParameter

func New() BaseClient {
	return original.New()
}
func NewACLClient() ACLClient {
	return original.NewACLClient()
}
func NewACLClientWithBaseURI(baseURI string) ACLClient {
	return original.NewACLClientWithBaseURI(baseURI)
}
func NewInboundRuleClient() InboundRuleClient {
	return original.NewInboundRuleClient()
}
func NewInboundRuleClientWithBaseURI(baseURI string) InboundRuleClient {
	return original.NewInboundRuleClientWithBaseURI(baseURI)
}
func NewNatGatewayClient() NatGatewayClient {
	return original.NewNatGatewayClient()
}
func NewNatGatewayClientWithBaseURI(baseURI string) NatGatewayClient {
	return original.NewNatGatewayClientWithBaseURI(baseURI)
}
func NewOutboundRuleClient() OutboundRuleClient {
	return original.NewOutboundRuleClient()
}
func NewOutboundRuleClientWithBaseURI(baseURI string) OutboundRuleClient {
	return original.NewOutboundRuleClientWithBaseURI(baseURI)
}
func NewRouteTableClient() RouteTableClient {
	return original.NewRouteTableClient()
}
func NewRouteTableClientWithBaseURI(baseURI string) RouteTableClient {
	return original.NewRouteTableClientWithBaseURI(baseURI)
}
func NewRouteTableDescriptionClient() RouteTableDescriptionClient {
	return original.NewRouteTableDescriptionClient()
}
func NewRouteTableDescriptionClientWithBaseURI(baseURI string) RouteTableDescriptionClient {
	return original.NewRouteTableDescriptionClientWithBaseURI(baseURI)
}
func NewRouteTableSubnetClient() RouteTableSubnetClient {
	return original.NewRouteTableSubnetClient()
}
func NewRouteTableSubnetClientWithBaseURI(baseURI string) RouteTableSubnetClient {
	return original.NewRouteTableSubnetClientWithBaseURI(baseURI)
}
func NewRuleClient() RuleClient {
	return original.NewRuleClient()
}
func NewRuleClientWithBaseURI(baseURI string) RuleClient {
	return original.NewRuleClientWithBaseURI(baseURI)
}
func NewSubnetClient() SubnetClient {
	return original.NewSubnetClient()
}
func NewSubnetClientWithBaseURI(baseURI string) SubnetClient {
	return original.NewSubnetClientWithBaseURI(baseURI)
}
func NewVirtualPrivateCloudClient() VirtualPrivateCloudClient {
	return original.NewVirtualPrivateCloudClient()
}
func NewVirtualPrivateCloudClientWithBaseURI(baseURI string) VirtualPrivateCloudClient {
	return original.NewVirtualPrivateCloudClientWithBaseURI(baseURI)
}
func NewWithBaseURI(baseURI string) BaseClient {
	return original.NewWithBaseURI(baseURI)
}
func PossibleACLRuleProtocolTypeCodeValues() []ACLRuleProtocolTypeCode {
	return original.PossibleACLRuleProtocolTypeCodeValues()
}
func PossibleNatGatewayStatusCodeValues() []NatGatewayStatusCode {
	return original.PossibleNatGatewayStatusCodeValues()
}
func PossibleNatGatewayStatusNameValues() []NatGatewayStatusName {
	return original.PossibleNatGatewayStatusNameValues()
}
func PossibleRouteTableStatusCodeValues() []RouteTableStatusCode {
	return original.PossibleRouteTableStatusCodeValues()
}
func PossibleRouteTableStatusNameValues() []RouteTableStatusName {
	return original.PossibleRouteTableStatusNameValues()
}
func PossibleSubnetStatusCodeValues() []SubnetStatusCode {
	return original.PossibleSubnetStatusCodeValues()
}
func PossibleVirtualPrivateCloudStatusCodeValues() []VirtualPrivateCloudStatusCode {
	return original.PossibleVirtualPrivateCloudStatusCodeValues()
}
func PossibleVirtualPrivateCloudStatusNameValues() []VirtualPrivateCloudStatusName {
	return original.PossibleVirtualPrivateCloudStatusNameValues()
}
func UserAgent() string {
	return original.UserAgent() + " profiles/latest"
}
func Version() string {
	return original.Version()
}
